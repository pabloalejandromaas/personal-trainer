{"version":3,"sources":["components/Customerslist.js","components/Trainingslist.js","App.js","reportWebVitals.js","index.js"],"names":["Customerlist","useState","customers","setCustomers","useEffect","getCustomers","fetch","then","response","json","data","content","catch","err","console","error","style","maxWidth","columns","title","field","icons","Clear","props","Search","ResetSearch","Trainingslist","trainings","setTrainings","getTrainings","render","rowData","moment","utc","date","format","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","a11yProps","useStyles","makeStyles","theme","root","flexGrow","width","backgroundColor","palette","background","paper","ScrollableTabsButtonAuto","classes","React","setValue","className","AppBar","position","color","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","scrollButtons","Tab","label","Customerslist","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7cdeac4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport MaterialTable from \"material-table\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\n\n\nfunction Customerlist() {\n  const [customers, setCustomers] = useState([]);\n\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  const getCustomers = () => {\n    fetch(\"https://customerrest.herokuapp.com/api/customers\")\n      .then((response) => response.json())\n      .then((data) => setCustomers(data.content))\n      .catch((err) => console.error(err));\n  };\n\n  const columns = [\n    {\n      title: \"First Name\",\n      field: \"firstname\",\n    },\n    {\n      title: \"Last Name\",\n      field: \"lastname\",\n    },\n    {\n      title: \"Street Address\",\n      field: \"streetaddress\",\n    },\n    {\n      title: \"Post Code\",\n      field: \"postcode\",\n    },\n    {\n      title: \"City\",\n      field: \"city\",\n    },\n\n    {\n      title: \"E-mail\",\n      field: \"email\",\n    },\n\n    {\n      title: \"Phone\",\n      field: \"phone\",\n    },\n  ];\n\n  return (\n    <div style={{ maxWidth: \"100%\" }}>\n      <MaterialTable \n      \n        columns={columns} \n        data={customers} \n        title=\"CUSTOMERS\"\n        icons={{\n            Clear: (props) => <DeleteIcon />,\n            Search: (props) => <SearchIcon />,\n            ResetSearch: (props) => <DeleteIcon />\n          }}\n        \n        \n        />\n    </div>\n  );\n}\n\nexport default Customerlist;\n","import React, { useState, useEffect } from \"react\";\n\nimport MaterialTable from \"material-table\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport moment from \"moment\";\n\nfunction Trainingslist() {\n  const [trainings, setTrainings] = useState([]);\n\n  useEffect(() => {\n    getTrainings();\n  }, []);\n\n  const getTrainings = () => {\n    fetch(\"https://customerrest.herokuapp.com/gettrainings\")\n      .then((response) => response.json())\n      .then((data) => {\n        setTrainings(data);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  // moment().format('MMMM Do YYYY, h:mm:ss a')\n\n  const columns = [\n    {\n      title: \"Date\",\n      field: \"date\",\n      render: rowData =>  moment.utc(rowData.date).format('MMMM Do YYYY, h:mm:ss a'),\n    },\n    {\n      title: \"Activity\",\n      field: \"activity\",\n    },\n    {\n      title: \"Duration (minutes)\",\n      field: \"duration\",\n    },\n    {\n      title: \"First name\",\n      field: \"customer.firstname\",\n    },\n    {\n      title: \"Last name\",\n      field: \"customer.lastname\",\n    },\n\n  ];\n\n  return (\n    <div style={{ maxWidth: \"100%\" }}>\n      <MaterialTable\n        columns={columns}\n        data={trainings}\n        title=\"TRAINING PROGRAMMES\"\n        icons={{\n          Clear: (props) => <DeleteIcon />,\n          Search: (props) => <SearchIcon />,\n          ResetSearch: (props) => <DeleteIcon />,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Trainingslist;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Customerslist from './components/Customerslist';\nimport Trainingslist from './components/Trainingslist';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function ScrollableTabsButtonAuto() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          <Tab label=\"Customers\" {...a11yProps(0)} />\n          <Tab label=\"Training programmes\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Customerslist />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n      <Trainingslist />\n      </TabPanel>\n    </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}